{"version":3,"sources":["AddToDo.js","ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","state","Id","Title","Status","handleIdChange","event","setState","target","value","handleTitleChange","handleStatusChange","handleSubmit","preventDefault","props","onAdd","className","this","onChange","placeholder","type","btn","onClick","Component","TodoList","todos","deleteItem","todo","filteredItems","filter","x","editItem","map","addToDo","style","color","icon","library","add","faTrash","faEdit","faPlus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.540934d1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nexport default class AddTodo extends Component {\r\n\r\n    state = {\r\n        Id: \"\",\r\n        Title: \"\",\r\n        Status: \"Pending\"\r\n    };\r\n\r\n    //Lets write the code for change in events\r\n    handleIdChange = (event) => {\r\n        this.setState({\r\n            Id: event.target.value\r\n        });\r\n    };\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({\r\n            Title: event.target.value\r\n        });\r\n    };\r\n\r\n     handleStatusChange = (event) => {\r\n        this.setState({\r\n            Status: event.target.value\r\n        });\r\n    };\r\n\r\n    //Handler for button click\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAdd({\r\n            Id:this.state.Id,\r\n            Title:this.state.Title,\r\n            Status: this.state.Status\r\n        });\r\n\r\n        this.setState({\r\n            Id:\"\",\r\n            Title:\"\",\r\n            Status:\"Pending\"\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3> Add ToDo</h3>\r\n\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <input value={this.state.Id} onChange={this.handleIdChange} className=\"form-control\" placeholder=\"Enter Id\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input value={this.state.Title} onChange={this.handleTitleChange} className=\"form-control\" placeholder=\"Enter Title\"/>\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select value={this.state.Status} onChange={this.handleStatusChange} className=\"form-control\">\r\n                            <option value=\"Done\">Done</option>\r\n                            <option value=\"Pending\">Pending</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                        <button type=\"submit\" className=\"form-control\" btn btn-primary onClick={this.handleSubmit}>\r\n                            Add Item\r\n                        </button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AddTodo from \"./AddToDo.js\"\r\n\r\nexport default class TodoList extends Component{\r\n\r\n\r\n    state = {\r\n        todos:[\r\n            {\r\n                Id: '1',\r\n                Title: 'Push code to github',\r\n                Status: 'Done'\r\n            },\r\n            {\r\n                Id: '2',\r\n                Title: 'Email to Manager',\r\n                Status: 'Pending'\r\n            },\r\n            {\r\n                Id: '3',\r\n                Title: 'Apply for Leave',\r\n                Status: 'Pending'\r\n            },\r\n        ]\r\n    };\r\n    deleteItem = (todo) => {\r\n        const filteredItems = this.state.todos.filter(x => x.Id !== todo.Id);\r\n        this.setState({\r\n            todos:filteredItems\r\n        })\r\n    }\r\n\r\n    editItem = (x) => {\r\n        this.setState(state => ({\r\n            todos: state.todos.map(todo => {\r\n                if(todo.Id === x.Id){\r\n                    return {\r\n                        ...todo,\r\n                        Status: todo.Status=== \"Done\"?\"Pending\" :\"Done\"\r\n                    };\r\n                }else {\r\n                    return todo\r\n                }\r\n            })\r\n        }))\r\n    }\r\n\r\n    //Add a method to handle all the changes on button click\r\n    addToDo = (todo) => {\r\n        this.setState({\r\n            todos: [...this.state.todos, todo]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n            <AddTodo onAdd={this.addToDo}></AddTodo>\r\n\r\n                <h1>TodoList</h1>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Title</th>\r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.todos.map(x => {\r\n                                return(\r\n                                    <tr key={x.Id}>\r\n                                        <td>{x.Id}</td>\r\n                                        <td>{x.Title}</td>\r\n                                        <td style={{color: x.Status ===\"Done\" ? \"green\":\"red\"}}>{x.Status}</td>\r\n                                        <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => \r\n                                        this.editItem(x)}>\r\n                                            <span>\r\n                                                <FontAwesomeIcon icon = \"edit\"></FontAwesomeIcon>\r\n                                            </span>\r\n                                        </button>\r\n                                       |\r\n                                        <button className=\"btn btn-primary\" onClick = {() => this.deleteItem(x)}>\r\n                                            <span>\r\n                                                <FontAwesomeIcon icon = \"trash\"></FontAwesomeIcon>\r\n                                            </span>\r\n                                        </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        );\r\n    }\r\n}","\nimport React, { Component } from 'react';\nimport './App.css';\nimport TodoList from './ToDoList';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash,faEdit,faPlus);\n\n\nclass App extends Component{\n\n  render(){\n    return(\n      <div>\n      <TodoList />\n      </div>\n    );\n  }\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}